//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AppJobPortal.UserServiceReferenceTcp {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/JobPortal.Model")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AppJobPortal.UserServiceReferenceTcp.Gender GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayPalMailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AppJobPortal.UserServiceReferenceTcp.Region RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine {
            get {
                return this.AddressLineField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLineField, value) != true)) {
                    this.AddressLineField = value;
                    this.RaisePropertyChanged("AddressLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AppJobPortal.UserServiceReferenceTcp.Gender Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayPalMail {
            get {
                return this.PayPalMailField;
            }
            set {
                if ((object.ReferenceEquals(this.PayPalMailField, value) != true)) {
                    this.PayPalMailField = value;
                    this.RaisePropertyChanged("PayPalMail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Postcode {
            get {
                return this.PostcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostcodeField, value) != true)) {
                    this.PostcodeField = value;
                    this.RaisePropertyChanged("Postcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AppJobPortal.UserServiceReferenceTcp.Region Region {
            get {
                return this.RegionField;
            }
            set {
                if ((this.RegionField.Equals(value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Gender", Namespace="http://schemas.datacontract.org/2004/07/JobPortal.Model")]
    public enum Gender : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Male = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Female = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Region", Namespace="http://schemas.datacontract.org/2004/07/JobPortal.Model")]
    public enum Region : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hovedstaden = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Midtjylland = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nordjylland = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sjalland = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Syddanmark = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserServiceReferenceTcp.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CreateUser", ReplyAction="http://tempuri.org/IUserService/CreateUserResponse")]
        bool CreateUser(AppJobPortal.UserServiceReferenceTcp.User u, string loggingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CreateUser", ReplyAction="http://tempuri.org/IUserService/CreateUserResponse")]
        System.Threading.Tasks.Task<bool> CreateUserAsync(AppJobPortal.UserServiceReferenceTcp.User u, string loggingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/FindUser", ReplyAction="http://tempuri.org/IUserService/FindUserResponse")]
        AppJobPortal.UserServiceReferenceTcp.User FindUser(string phoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/FindUser", ReplyAction="http://tempuri.org/IUserService/FindUserResponse")]
        System.Threading.Tasks.Task<AppJobPortal.UserServiceReferenceTcp.User> FindUserAsync(string phoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/FindUserByID", ReplyAction="http://tempuri.org/IUserService/FindUserByIDResponse")]
        AppJobPortal.UserServiceReferenceTcp.User FindUserByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/FindUserByID", ReplyAction="http://tempuri.org/IUserService/FindUserByIDResponse")]
        System.Threading.Tasks.Task<AppJobPortal.UserServiceReferenceTcp.User> FindUserByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteUser", ReplyAction="http://tempuri.org/IUserService/DeleteUserResponse")]
        bool DeleteUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteUser", ReplyAction="http://tempuri.org/IUserService/DeleteUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/EditUser", ReplyAction="http://tempuri.org/IUserService/EditUserResponse")]
        bool EditUser(AppJobPortal.UserServiceReferenceTcp.User u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/EditUser", ReplyAction="http://tempuri.org/IUserService/EditUserResponse")]
        System.Threading.Tasks.Task<bool> EditUserAsync(AppJobPortal.UserServiceReferenceTcp.User u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAll", ReplyAction="http://tempuri.org/IUserService/GetAllResponse")]
        AppJobPortal.UserServiceReferenceTcp.User[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAll", ReplyAction="http://tempuri.org/IUserService/GetAllResponse")]
        System.Threading.Tasks.Task<AppJobPortal.UserServiceReferenceTcp.User[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ListByGender", ReplyAction="http://tempuri.org/IUserService/ListByGenderResponse")]
        AppJobPortal.UserServiceReferenceTcp.User[] ListByGender(AppJobPortal.UserServiceReferenceTcp.Gender gender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ListByGender", ReplyAction="http://tempuri.org/IUserService/ListByGenderResponse")]
        System.Threading.Tasks.Task<AppJobPortal.UserServiceReferenceTcp.User[]> ListByGenderAsync(AppJobPortal.UserServiceReferenceTcp.Gender gender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ListByRegion", ReplyAction="http://tempuri.org/IUserService/ListByRegionResponse")]
        AppJobPortal.UserServiceReferenceTcp.User[] ListByRegion(AppJobPortal.UserServiceReferenceTcp.Region region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ListByRegion", ReplyAction="http://tempuri.org/IUserService/ListByRegionResponse")]
        System.Threading.Tasks.Task<AppJobPortal.UserServiceReferenceTcp.User[]> ListByRegionAsync(AppJobPortal.UserServiceReferenceTcp.Region region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/EditUserEmail", ReplyAction="http://tempuri.org/IUserService/EditUserEmailResponse")]
        bool EditUserEmail(AppJobPortal.UserServiceReferenceTcp.User u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/EditUserEmail", ReplyAction="http://tempuri.org/IUserService/EditUserEmailResponse")]
        System.Threading.Tasks.Task<bool> EditUserEmailAsync(AppJobPortal.UserServiceReferenceTcp.User u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Login", ReplyAction="http://tempuri.org/IUserService/LoginResponse")]
        bool Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Login", ReplyAction="http://tempuri.org/IUserService/LoginResponse")]
        System.Threading.Tasks.Task<bool> LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddDescription", ReplyAction="http://tempuri.org/IUserService/AddDescriptionResponse")]
        bool AddDescription(AppJobPortal.UserServiceReferenceTcp.User u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddDescription", ReplyAction="http://tempuri.org/IUserService/AddDescriptionResponse")]
        System.Threading.Tasks.Task<bool> AddDescriptionAsync(AppJobPortal.UserServiceReferenceTcp.User u);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : AppJobPortal.UserServiceReferenceTcp.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<AppJobPortal.UserServiceReferenceTcp.IUserService>, AppJobPortal.UserServiceReferenceTcp.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CreateUser(AppJobPortal.UserServiceReferenceTcp.User u, string loggingId) {
            return base.Channel.CreateUser(u, loggingId);
        }
        
        public System.Threading.Tasks.Task<bool> CreateUserAsync(AppJobPortal.UserServiceReferenceTcp.User u, string loggingId) {
            return base.Channel.CreateUserAsync(u, loggingId);
        }
        
        public AppJobPortal.UserServiceReferenceTcp.User FindUser(string phoneNumber) {
            return base.Channel.FindUser(phoneNumber);
        }
        
        public System.Threading.Tasks.Task<AppJobPortal.UserServiceReferenceTcp.User> FindUserAsync(string phoneNumber) {
            return base.Channel.FindUserAsync(phoneNumber);
        }
        
        public AppJobPortal.UserServiceReferenceTcp.User FindUserByID(int id) {
            return base.Channel.FindUserByID(id);
        }
        
        public System.Threading.Tasks.Task<AppJobPortal.UserServiceReferenceTcp.User> FindUserByIDAsync(int id) {
            return base.Channel.FindUserByIDAsync(id);
        }
        
        public bool DeleteUser(int id) {
            return base.Channel.DeleteUser(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserAsync(int id) {
            return base.Channel.DeleteUserAsync(id);
        }
        
        public bool EditUser(AppJobPortal.UserServiceReferenceTcp.User u) {
            return base.Channel.EditUser(u);
        }
        
        public System.Threading.Tasks.Task<bool> EditUserAsync(AppJobPortal.UserServiceReferenceTcp.User u) {
            return base.Channel.EditUserAsync(u);
        }
        
        public AppJobPortal.UserServiceReferenceTcp.User[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<AppJobPortal.UserServiceReferenceTcp.User[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public AppJobPortal.UserServiceReferenceTcp.User[] ListByGender(AppJobPortal.UserServiceReferenceTcp.Gender gender) {
            return base.Channel.ListByGender(gender);
        }
        
        public System.Threading.Tasks.Task<AppJobPortal.UserServiceReferenceTcp.User[]> ListByGenderAsync(AppJobPortal.UserServiceReferenceTcp.Gender gender) {
            return base.Channel.ListByGenderAsync(gender);
        }
        
        public AppJobPortal.UserServiceReferenceTcp.User[] ListByRegion(AppJobPortal.UserServiceReferenceTcp.Region region) {
            return base.Channel.ListByRegion(region);
        }
        
        public System.Threading.Tasks.Task<AppJobPortal.UserServiceReferenceTcp.User[]> ListByRegionAsync(AppJobPortal.UserServiceReferenceTcp.Region region) {
            return base.Channel.ListByRegionAsync(region);
        }
        
        public bool EditUserEmail(AppJobPortal.UserServiceReferenceTcp.User u) {
            return base.Channel.EditUserEmail(u);
        }
        
        public System.Threading.Tasks.Task<bool> EditUserEmailAsync(AppJobPortal.UserServiceReferenceTcp.User u) {
            return base.Channel.EditUserEmailAsync(u);
        }
        
        public bool Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public bool AddDescription(AppJobPortal.UserServiceReferenceTcp.User u) {
            return base.Channel.AddDescription(u);
        }
        
        public System.Threading.Tasks.Task<bool> AddDescriptionAsync(AppJobPortal.UserServiceReferenceTcp.User u) {
            return base.Channel.AddDescriptionAsync(u);
        }
    }
}
