//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyWeb.UserReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserReference1.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CreateUser", ReplyAction="http://tempuri.org/IUserService/CreateUserResponse")]
        bool CreateUser(JobPortal.Model.User u, string loggingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CreateUser", ReplyAction="http://tempuri.org/IUserService/CreateUserResponse")]
        System.Threading.Tasks.Task<bool> CreateUserAsync(JobPortal.Model.User u, string loggingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/FindUser", ReplyAction="http://tempuri.org/IUserService/FindUserResponse")]
        JobPortal.Model.User FindUser(string phoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/FindUser", ReplyAction="http://tempuri.org/IUserService/FindUserResponse")]
        System.Threading.Tasks.Task<JobPortal.Model.User> FindUserAsync(string phoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/FindUserByID", ReplyAction="http://tempuri.org/IUserService/FindUserByIDResponse")]
        JobPortal.Model.User FindUserByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/FindUserByID", ReplyAction="http://tempuri.org/IUserService/FindUserByIDResponse")]
        System.Threading.Tasks.Task<JobPortal.Model.User> FindUserByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteUser", ReplyAction="http://tempuri.org/IUserService/DeleteUserResponse")]
        bool DeleteUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteUser", ReplyAction="http://tempuri.org/IUserService/DeleteUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/EditUser", ReplyAction="http://tempuri.org/IUserService/EditUserResponse")]
        bool EditUser(JobPortal.Model.User u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/EditUser", ReplyAction="http://tempuri.org/IUserService/EditUserResponse")]
        System.Threading.Tasks.Task<bool> EditUserAsync(JobPortal.Model.User u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAll", ReplyAction="http://tempuri.org/IUserService/GetAllResponse")]
        JobPortal.Model.User[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAll", ReplyAction="http://tempuri.org/IUserService/GetAllResponse")]
        System.Threading.Tasks.Task<JobPortal.Model.User[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ListByGender", ReplyAction="http://tempuri.org/IUserService/ListByGenderResponse")]
        JobPortal.Model.User[] ListByGender(JobPortal.Model.Gender gender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ListByGender", ReplyAction="http://tempuri.org/IUserService/ListByGenderResponse")]
        System.Threading.Tasks.Task<JobPortal.Model.User[]> ListByGenderAsync(JobPortal.Model.Gender gender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ListByRegion", ReplyAction="http://tempuri.org/IUserService/ListByRegionResponse")]
        JobPortal.Model.User[] ListByRegion(JobPortal.Model.Region region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ListByRegion", ReplyAction="http://tempuri.org/IUserService/ListByRegionResponse")]
        System.Threading.Tasks.Task<JobPortal.Model.User[]> ListByRegionAsync(JobPortal.Model.Region region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/EditUserEmail", ReplyAction="http://tempuri.org/IUserService/EditUserEmailResponse")]
        bool EditUserEmail(JobPortal.Model.User u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/EditUserEmail", ReplyAction="http://tempuri.org/IUserService/EditUserEmailResponse")]
        System.Threading.Tasks.Task<bool> EditUserEmailAsync(JobPortal.Model.User u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddDescription", ReplyAction="http://tempuri.org/IUserService/AddDescriptionResponse")]
        bool AddDescription(JobPortal.Model.User u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddDescription", ReplyAction="http://tempuri.org/IUserService/AddDescriptionResponse")]
        System.Threading.Tasks.Task<bool> AddDescriptionAsync(JobPortal.Model.User u);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : MyWeb.UserReference1.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<MyWeb.UserReference1.IUserService>, MyWeb.UserReference1.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CreateUser(JobPortal.Model.User u, string loggingId) {
            return base.Channel.CreateUser(u, loggingId);
        }
        
        public System.Threading.Tasks.Task<bool> CreateUserAsync(JobPortal.Model.User u, string loggingId) {
            return base.Channel.CreateUserAsync(u, loggingId);
        }
        
        public JobPortal.Model.User FindUser(string phoneNumber) {
            return base.Channel.FindUser(phoneNumber);
        }
        
        public System.Threading.Tasks.Task<JobPortal.Model.User> FindUserAsync(string phoneNumber) {
            return base.Channel.FindUserAsync(phoneNumber);
        }
        
        public JobPortal.Model.User FindUserByID(int id) {
            return base.Channel.FindUserByID(id);
        }
        
        public System.Threading.Tasks.Task<JobPortal.Model.User> FindUserByIDAsync(int id) {
            return base.Channel.FindUserByIDAsync(id);
        }
        
        public bool DeleteUser(int id) {
            return base.Channel.DeleteUser(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserAsync(int id) {
            return base.Channel.DeleteUserAsync(id);
        }
        
        public bool EditUser(JobPortal.Model.User u) {
            return base.Channel.EditUser(u);
        }
        
        public System.Threading.Tasks.Task<bool> EditUserAsync(JobPortal.Model.User u) {
            return base.Channel.EditUserAsync(u);
        }
        
        public JobPortal.Model.User[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<JobPortal.Model.User[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public JobPortal.Model.User[] ListByGender(JobPortal.Model.Gender gender) {
            return base.Channel.ListByGender(gender);
        }
        
        public System.Threading.Tasks.Task<JobPortal.Model.User[]> ListByGenderAsync(JobPortal.Model.Gender gender) {
            return base.Channel.ListByGenderAsync(gender);
        }
        
        public JobPortal.Model.User[] ListByRegion(JobPortal.Model.Region region) {
            return base.Channel.ListByRegion(region);
        }
        
        public System.Threading.Tasks.Task<JobPortal.Model.User[]> ListByRegionAsync(JobPortal.Model.Region region) {
            return base.Channel.ListByRegionAsync(region);
        }
        
        public bool EditUserEmail(JobPortal.Model.User u) {
            return base.Channel.EditUserEmail(u);
        }
        
        public System.Threading.Tasks.Task<bool> EditUserEmailAsync(JobPortal.Model.User u) {
            return base.Channel.EditUserEmailAsync(u);
        }
        
        public bool AddDescription(JobPortal.Model.User u) {
            return base.Channel.AddDescription(u);
        }
        
        public System.Threading.Tasks.Task<bool> AddDescriptionAsync(JobPortal.Model.User u) {
            return base.Channel.AddDescriptionAsync(u);
        }
    }
}
