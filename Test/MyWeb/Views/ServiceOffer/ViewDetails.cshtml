@model MyWeb.Models.ViewDetails
@using Microsoft.AspNet.Identity;
@using DayPilot.Web.Mvc
@using DayPilot.Web.Mvc.Events.Calendar
@using ViewType = DayPilot.Web.Mvc.Enums.Calendar.ViewType

@{
    ViewBag.Title = Model.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Styles.Render("~/Content/Rating.css")

@using (Html.BeginForm())
{@Html.AntiForgeryToken() @Html.HiddenFor(model => model.Id)

<div class="offerCard">
    <h2>@Model.Title</h2>

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row">
        <div class="col-md-6">
            @if (Model.Category.ToString() == "Home")
            {
                <img class="card-img-top" src="~/Pictures/home.png" alt="Card image" style="width:40%;
                          margin-left:0; margin-right: auto;">
            }
            else if (Model.Category.ToString() == "Tutoring")
            {
                <img class="card-img-top" src="~/Pictures/tutoring.png" alt="Card image" style="width:40%;
                          margin-left:0; margin-right: auto;">
            }
            else if (Model.Category.ToString() == "IT")
            {
                <img class="card-img-top" src="~/Pictures/it.png" alt="Card image" style="width:40%;
                          margin-left:0; margin-right: auto;">
            }
            else if (Model.Category.ToString() == "Repairs")
            {
                <img class="card-img-top" src="~/Pictures/repairs.png" alt="Card image" style="width:40%;
                          margin-left:0; margin-right: auto;">
            }
            else if (Model.Category.ToString() == "Architecture")
            {
                <img class="card-img-top" src="~/Pictures/architecture.png" alt="Card image" style="width:40%;
                          margin-left:0; margin-right: auto;">
            }
            else if (Model.Category.ToString() == "Media")
            {
                <img class="card-img-top" src="~/Pictures/media.png" alt="Card image" style="width:40%;
                          margin-left:0; margin-right: auto;">
            }
        </div>
        <div class="col-md-6">
            @if (Model.Author == User.Identity.GetUserId())
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.Title)

                    <div class="col-md-12" id="edit">
                        @Html.EditorFor(model => model.Title)
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.RatePerHour)

                    <div class="col-md-12" id="edit">
                        @Html.EditorFor(model => model.RatePerHour)
                        @Html.ValidationMessageFor(model => model.RatePerHour, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Description)

                    <div class="col-md-12" id="edit">
                        @Html.TextAreaFor(model => model.Description, new { style = "width:250px; word-break:break-word;" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-primary" />
                        @Html.ActionLink("Delete", "Delete", "ServiceOffer", new { idd = Model.Id }, new { @class = "btn btn-danger" })
                    </div>
                </div>
            }
            else
            {
                <div class="panel panel-default" style="margin-top:20px;">
                    <div class="panel-heading" style="font-size:20px;">@Html.DisplayTextFor(model => model.Title)</div>
                    <div class="panel-body" style="height:130px;">@Html.DisplayTextFor(model => model.Description)</div>
                </div>


                <div class="form-group">
                    @Html.ActionLink("See an author of the service offer", "UserProfile", "User", new { id = Model.Author }, null)
                </div>

            }
        </div>

    </div>

    @if (Model.Author != User.Identity.GetUserId())
    {<div class="row">
            <div class="col-md-10">
                Available days when you can order the service:
                <div>
                    @foreach (var t in Model.Dates)
                    {
                        <div>
                            @t.WeekDay.ToString()s
                        </div>
                    }
                </div>
                <p><span class="glyphicon glyphicon-calendar" style="padding-right:20px;"></span><input type="date" name="days" id="selecteddate"></p>
                <br />
                <p> <span class="glyphicon glyphicon-time" style="padding-right:20px;"></span>@Html.DropDownList("Hours from", new SelectList(""), new { @id = "hoursfrom", @class = "form-control" }) </p>                
                <p> <span class="glyphicon glyphicon-time" style="padding-right:20px;"></span> @Html.DropDownList("Hours To", new SelectList(""), new { @id = "hoursto", @class = "form-control" }) </p> 
                <br />

                @Html.ActionLink("Add to cart", "AddToCart", "Order", new { serviceID = Model.Id, userID = User.Identity.GetUserId() }, new { @class = "btn btn-danger", @id = "addToCart" })
            </div>
        </div>
    }



        @if (Model.Author == User.Identity.GetUserId())
        {

            <br />

            <script src="@Url.Content("~/Scripts/daypilot-all.min.js")" type="text/javascript"></script>

            <div id="dp">
                <br />
                <br />
                <br />


                @Html.DayPilotCalendar("dpc", new DayPilotCalendarConfig
           {
               BackendUrl = Url.Action("Backend", "Calendar",new {serviceId = Model.Id }),
               ViewType = ViewType.Week,
               CellDuration = 60,
               Height = 600,
               CellHeight = 30,
               HeightSpec = DayPilot.Web.Mvc.Enums.Calendar.HeightSpec.Full,
               DayBeginsHour= 5,
               DayEndsHour= 22,
               AutoRefreshEnabled = true,
               AutoRefreshInterval = 10,
               DurationBarVisible = true,
               TimeRangeSelectedHandling = TimeRangeSelectedHandlingType.JavaScript,
               TimeRangeSelectedJavaScript = "create(start, end)",
               EventClickHandling = EventClickHandlingType.JavaScript,
               EventDeleteHandling = EventDeleteHandlingType.CallBack,
               HeaderDateFormat = "dddd",


           })

            </div>

        }
        else
        {

            <fieldset class="rating">
                <input type="radio" id="star5" name="rating" value="5" /><label class="full" for="star5" title="Awesome - 5 stars"></label>
                <input type="radio" id="star4half" name="rating" value="4 and a half" /><label class="half" for="star4half" title="Pretty good - 4.5 stars"></label>
                <input type="radio" id="star4" name="rating" value="4" /><label class="full" for="star4" title="Pretty good - 4 stars"></label>
                <input type="radio" id="star3half" name="rating" value="3 and a half" /><label class="half" for="star3half" title="Good - 3.5 stars"></label>
                <input type="radio" id="star3" name="rating" value="3" /><label class="full" for="star3" title="Not that bad - 3 stars"></label>
                <input type="radio" id="star2half" name="rating" value="2 and a half" /><label class="half" for="star2half" title="Bad - 2.5 stars"></label>
                <input type="radio" id="star2" name="rating" value="2" /><label class="full" for="star2" title="Bad - 2 stars"></label>
                <input type="radio" id="star1half" name="rating" value="1 and a half" /><label class="half" for="star1half" title="Terrible - 1.5 stars"></label>
                <input type="radio" id="star1" name="rating" value="1" /><label class="full" for="star1" title="Terrible - 1 star"></label>
                <input type="radio" id="starhalf" name="rating" value="half" /><label class="half" for="starhalf" title="Terrible - 0.5 stars"></label>
            </fieldset>


        }
    </div>
}
@Html.Raw(TempData["msg"])
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>

<script>

    $('#selecteddate').change(function () {
        var selectedDate = $("#selecteddate").val();
        var hourFrom = $('#hoursfrom');
        hourFrom.empty();
        console.log(selectedDate);
        if (selectedDate != null && selectedDate != '') {
            $.getJSON('@Url.Action("GetHoursFrom")', { serviceId: @Model.Id, date: selectedDate }, function (sub) {
                        if (sub != null && !jQuery.isEmptyObject(sub))
                        {
                            console.log(selectedDate);

                            hourFrom.append($('<option/>', {
                                value: null,
                                text: ""
                            }));
                            $.each(sub, function (index, subcats) {
                                console.log(subcats);

                                hourFrom.append($('<option/>', {
                                    value: subcats.Value,
                                    text: subcats.Text
                                }));
                            });
                        };
                    });
                }
            });


    $('#hoursfrom').change(function () {
        var selectedDate = $("#selecteddate").val();
        var selectedHour= $("#hoursfrom").val();
        var hourto = $('#hoursto');

        hourto.empty();
        if (selectedDate != null && selectedDate != '') {

            $.getJSON('@Url.Action("GetHoursTo")', { serviceId: @Model.Id, date: selectedDate, from: selectedHour }, function (sub) {
                console.log(sub);

                        if (sub != null && !jQuery.isEmptyObject(sub))
                        {
                            console.log(selectedDate);

                            hourto.append($('<option/>', {
                                value: null,
                                text: ""
                            }));
                            $.each(sub, function (index, subcats) {

                                hourto.append($('<option/>', {
                                    value: subcats.Value,
                                    text: subcats.Text
                                }));
                            });
                        };
                    });
                }
    });
      $('#addToCart').click(function () {
        var date = $('#selecteddate').val();
        var from = $('#hoursfrom').val();
        var to = $('#hoursto').val();
        var path = '@Url.Content("~/Order/AddToCart")' + "?serviceID=@Model.Id+&userID=@User.Identity.GetUserId()+&date=" + date + "+&from=" + from + "+&to=" + to;
        $(this).attr("href", path);
    });


</script>

<script type="text/javascript">

    function create(start, end) {

        var m = new DayPilot.Modal();
        m.closed = function () {
            if (this.result == "Hours are added") {
                dpc.commandCallBack('refresh');
            }

            dpc.clearSelection();
        };

      //  m.showUrl('@Url.Action("AddHours", "Calendar")?startT=' + start + '&endT=' + end + '&serviceId='+@Model.Id );
    }

    function edit(e) {
        var m = new DayPilot.Modal();
        m.closed = function () {
            if (this.result == "OK") {
                dpc.commandCallBack('refresh');
            }
            dpc.clearSelection();
        };
        m.showUrl('@Url.Action("Edit", "Event")/' + e.id());
    }

</script>
